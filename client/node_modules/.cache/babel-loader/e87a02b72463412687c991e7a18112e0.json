{"ast":null,"code":"var _jsxFileName = \"/Users/italobarboza/Documents/Italo/Other_projects/todo-react-app/client/src/components/TodoList.js\";\nimport React, { memo } from \"react\";\nimport { List, Paper, Grid } from \"@material-ui/core\";\nimport TodoListItem from \"./TodoListItem\";\n/*const TodoList = memo(props => (\n  <>\n    {props.items.length > 0 && (\n      <Paper style={{ margin: 16 }}>\n        <List style={{ overflow: \"scroll\" }}>\n          {props.items.map((item, idx) => (\n            <TodoListItem\n              {...item}\n              key={`TodoItem.${idx}`}\n              divider={idx !== props.items.length - 1}\n              onRemoveButtonClick={() => props.onItemRemove(item._id)}\n              onCheckBoxToggle={() => props.onItemCheck(item._id)}\n            />\n          ))}\n        </List>\n      </Paper>\n    )}\n  </>\n));*/\n\nvar TodoList = function TodoList(props) {\n  return React.createElement(React.Fragment, null, props.items.length > 0 && React.createElement(Paper, {\n    style: {\n      margin: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(List, {\n    style: {\n      overflow: \"scroll\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.items.map(function (item, idx) {\n    return React.createElement(TodoListItem, Object.assign({}, item, {\n      key: \"TodoItem.\".concat(idx),\n      divider: idx !== props.items.length - 1,\n      onRemoveButtonClick: function onRemoveButtonClick() {\n        return props.onItemRemove(item._id);\n      },\n      onCheckBoxToggle: function onCheckBoxToggle() {\n        return props.onItemCheck(item._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }))));\n};\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/italobarboza/Documents/Italo/Other_projects/todo-react-app/client/src/components/TodoList.js"],"names":["React","memo","List","Paper","Grid","TodoListItem","TodoList","props","items","length","margin","overflow","map","item","idx","onItemRemove","_id","onItemCheck"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,QAAkC,mBAAlC;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA;;;;;;;;;;;;;;;;;;;;AAoBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SACpB,0CACGA,KAAK,CAACC,KAAN,CAAYC,MAAZ,GAAqB,CAArB,IACC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACC,KAAN,CAAYI,GAAZ,CAAgB,UAACC,IAAD,EAAOC,GAAP;AAAA,WACf,oBAAC,YAAD,oBACMD,IADN;AAEE,MAAA,GAAG,qBAAcC,GAAd,CAFL;AAGE,MAAA,OAAO,EAAEA,GAAG,KAAKP,KAAK,CAACC,KAAN,CAAYC,MAAZ,GAAqB,CAHxC;AAIE,MAAA,mBAAmB,EAAE;AAAA,eAAMF,KAAK,CAACQ,YAAN,CAAmBF,IAAI,CAACG,GAAxB,CAAN;AAAA,OAJvB;AAKE,MAAA,gBAAgB,EAAE;AAAA,eAAMT,KAAK,CAACU,WAAN,CAAkBJ,IAAI,CAACG,GAAvB,CAAN;AAAA,OALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADe;AAAA,GAAhB,CADH,CADF,CAFJ,CADoB;AAAA,CAAtB;;AAoBA,eAAeV,QAAf","sourcesContent":["import React, { memo } from \"react\";\nimport { List, Paper, Grid } from \"@material-ui/core\";\n\nimport TodoListItem from \"./TodoListItem\";\n\n/*const TodoList = memo(props => (\n  <>\n    {props.items.length > 0 && (\n      <Paper style={{ margin: 16 }}>\n        <List style={{ overflow: \"scroll\" }}>\n          {props.items.map((item, idx) => (\n            <TodoListItem\n              {...item}\n              key={`TodoItem.${idx}`}\n              divider={idx !== props.items.length - 1}\n              onRemoveButtonClick={() => props.onItemRemove(item._id)}\n              onCheckBoxToggle={() => props.onItemCheck(item._id)}\n            />\n          ))}\n        </List>\n      </Paper>\n    )}\n  </>\n));*/\n\nconst TodoList = props => (\n  <>\n    {props.items.length > 0 && (\n      <Paper style={{ margin: 16 }}>\n        <List style={{ overflow: \"scroll\" }}>\n          {props.items.map((item, idx) => (\n            <TodoListItem\n              {...item}\n              key={`TodoItem.${idx}`}\n              divider={idx !== props.items.length - 1}\n              onRemoveButtonClick={() => props.onItemRemove(item._id)}\n              onCheckBoxToggle={() => props.onItemCheck(item._id)}\n            />\n          ))}\n        </List>\n      </Paper>\n    )}\n  </>\n);\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}